{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./df_websockets/app.js","webpack:///./df_websockets/base.js","webpack:///./df_websockets/forms.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DFSignals","connection","buffer","registry","wsurl","document","addEventListener","websocketConnect","decodeURIComponent","cname","ca","cookie","split","length","charAt","substring","indexOf","getCookie","WebSocket","onopen","send","onmessage","e","console","debug","data","msg","JSON","parse","signal","signal_id","opts","onerror","error","onclose","setTimeout","id","undefined","stringify","push","connect","fn","querySelectorAll","selector","forEach","elt","classList","add","class_name","insertAdjacentElement","content","append","firstChild","removeChild","insertBefore","parent","parentNode","removeAttribute","attr_name","remove","outerHTML","setAttribute","attr_value","innerHTML","textContent","save","createElement","href","url","target","download","filename","evt","MouseEvent","view","window","bubbles","cancelable","dispatchEvent","URL","webkitURL","revokeObjectURL","focus","serializeForm","form","serialized","elements","field","disabled","type","files","selectedOptions","checked","getAttribute","eventName","on","tagName","prevent","preventDefault","DOMContentAdded"],"mappings":"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","file":"df_websockets/static/js/df_websockets.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nDFSignals = {\n    connection: null,\n    buffer: [],\n    registry: {},\n    wsurl: null\n};\n\nfunction getCookie(cname) {\n    const name = cname + \"=\";\n    const decodedCookie = decodeURIComponent(document.cookie);\n    const ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\n\nfunction websocketConnect() {\n    if (DFSignals.wsurl === null) {\n        DFSignals.wsurl = decodeURIComponent(getCookie(\"dfwsurl\"));\n    }\n    const connection = new WebSocket(DFSignals.wsurl);\n    /* cannot use header or cookies (cookies may change after the initial connection)\n    *  so we use GET parameter\n    *  */\n    connection.onopen = () => {\n        DFSignals.connection = connection;\n        for (let i = 0; i < DFSignals.buffer.length; i++) {\n            connection.send(DFSignals.buffer[i]);\n        }\n        DFSignals.buffer = [];\n    };\n    connection.onmessage = (e) => {\n        console.debug('received call ' + e.data + ' from server.')\n        const msg = JSON.parse(e.data);\n        // noinspection JSUnresolvedVariable\n        if (msg.signal && msg.signal_id) {\n            DFSignals.call(msg.signal, msg.opts, msg.signal_id);\n        }\n    };\n    connection.onerror = (e) => {\n        console.error(\"WS error: \" + e);\n    };\n    connection.onclose = () => {\n        DFSignals.connection = null;\n        setTimeout(websocketConnect, 3000);\n    }\n}\n\nfunction call(signal, opts, id) {\n    /*\"\"\"\n    .. function:: call(signal, opts, id)\n\n        Call a signal.\n        If the signal is also defined in the Python server and available to the user, then the Python signal is also triggered.\n\n        :param string signal: Name of the called signal.\n        :param object opts: Object with signal arguments.\n        :param string id: Unique id of each signal triggered by the server. Do not use it yourself.\n        :returns: always `false`.\n    */\n    // if (DFSignals.registry[signal] === undefined) {\n    //     console.debug('unknown call \"' + signal + '\" (from both client and server).');\n    //     return false;\n    // } else\n    if ((id !== undefined) && (DFSignals.registry[id] !== undefined)) {\n        return false;\n    } else if (id !== undefined) {\n        DFSignals.registry[id] = true;\n    }\n    if (DFSignals.registry[signal] !== undefined) {\n        console.debug('call \"' + signal + '\"', opts);\n        for (let i = 0; i < DFSignals.registry[signal].length; i += 1) {\n            DFSignals.registry[signal][i](opts, id);\n        }\n    }\n    if (id === undefined) {\n        console.debug('call from client: \"' + signal + '\"', opts);\n        const msg = JSON.stringify({signal: signal, opts: opts});\n        if (DFSignals.connection) {\n            DFSignals.connection.send(msg);\n        } else {\n            DFSignals.buffer.push(msg);\n        }\n    }\n\n    return false;\n}\n\nfunction connect(signal, fn) {\n    /*\"\"\"\n    .. function:: connect(signal, fn)\n\n        Connect a javascript code to the given signal name.\n\n        :param string signal: Name of the signal.\n        :param function fn: Function that takes a single object as argument. The properties of this object are the signal arguments.\n        :returns: nothing.\n    */\n    if (DFSignals.registry[signal] === undefined) {\n        DFSignals.registry[signal] = [];\n    }\n    DFSignals.registry[signal].push(fn);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", websocketConnect);\n\nDFSignals.call = call;\nDFSignals.connect = connect;\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nfunction connectSignals() {\n\n    // noinspection ES6ModulesDependencies\n    DFSignals.connect('html.add_class', opts => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            // noinspection JSUnresolvedVariable\n            elt.classList.add(opts.class_name)\n        });\n    });\n    /*\"\"\"\n    .. function:: html.add_class(opts)\n\n        Adds the specified class(es) to each of the set of matched elements.\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.add_class', {selector: \"#obj\", class_name: \"myclass\"});\n\n        :param string selector: jQuery selector\n        :param string class_name: new class\n\n    */\n\n    DFSignals.connect('html.after', opts => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            elt.insertAdjacentElement('afterend', opts.content)\n        });\n    });\n    /*\"\"\"\n    .. function:: html.after(opts)\n\n        Insert content, specified by the parameter, after each element in the set of matched elements..\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.after', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        :param string selector: jQuery selector\n        :param string content: new HTML content\n\n    */\n\n    DFSignals.connect('html.append', opts => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            elt.append(opts.content)\n        });\n    });\n    /*\"\"\"\n    .. function:: html.append(opts)\n\n        Insert content, specified by the parameter, to the end of each element in the set of matched elements.\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.append', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        :param string selector: jQuery selector\n        :param string content: new HTML content\n\n    */\n\n    DFSignals.connect('html.before', opts => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            elt.insertAdjacentElement('beforebegin', opts.content)\n        });\n    });\n    /*\"\"\"\n    .. function:: html.before(opts)\n\n        Insert content, specified by the parameter, before each element in the set of matched elements..\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.before', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        :param string selector: jQuery selector\n        :param string content: new HTML content\n\n    */\n\n    DFSignals.connect('html.empty', opts => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            while (elt.firstChild) {\n                elt.removeChild(elt.firstChild);\n            }\n        });\n    });\n    /*\"\"\"\n    .. function:: html.empty(opts)\n\n        Remove all child nodes of the set of matched elements from the DOM.\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.empty', {selector: \"#obj\"});\n\n        :param string selector: jQuery selector\n\n    */\n\n    DFSignals.connect('html.prepend', opts => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            elt.insertBefore(opts.content, parent.firstChild);\n        });\n    });\n    /*\"\"\"\n    .. function:: html.prepend(opts)\n\n        Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.prepend', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        :param string selector: jQuery selector\n        :param string content: new HTML content\n\n    */\n\n    DFSignals.connect('html.remove', opts => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            elt.parentNode.removeChild(elt)\n        });\n    });\n    /*\"\"\"\n    .. function:: html.remove(opts)\n\n        Remove the set of matched elements from the DOM.\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.remove', {selector: \"#obj\"});\n\n        :param string selector: jQuery selector\n\n    */\n    DFSignals.connect('html.remove_attr', (opts) => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            // noinspection JSUnresolvedVariable\n            elt.removeAttribute(opts.attr_name);\n        });\n    });\n    /*\"\"\"\n    .. function:: html.remove_attr(opts)\n\n        Remove an attribute from each element in the set of matched elements.\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.remove_attr', {selector: \"#obj\", attr_name: \"attr\"});\n\n        :param string selector: jQuery selector\n        :param string attr_name: attribute to remove\n\n    */\n    DFSignals.connect('html.remove_class', (opts) => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            // noinspection JSUnresolvedVariable\n            elt.classList.remove(opts.class_name);\n        });\n    });\n    /*\"\"\"\n    .. function:: html.remove_class(opts)\n\n        Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.remove_class', {selector: \"#obj\", class_name: \"class\"});\n\n        :param string selector: jQuery selector\n        :param string class_name: class to remove\n\n    */\n    DFSignals.connect('html.replace_with', (opts) => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            elt.outerHTML = opts.content;\n        });\n    });\n    /*\"\"\"\n    .. function:: html.replace_with(opts)\n\n        Replace each element in the set of matched elements with the provided new content.\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.replace_with', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        :param string selector: jQuery selector\n        :param string content: new HTML content\n\n    */\n\n    DFSignals.connect('html.add_attribute', (opts) => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            // noinspection JSUnresolvedVariable\n            elt.setAttribute(opts.attr_name, opts.attr_value);\n        });\n    });\n    /*\"\"\"\n    .. function:: html.after(opts)\n\n        Insert content, specified by the parameter, after each element in the set of matched elements..\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.after', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        :param string selector: jQuery selector\n        :param string content: new HTML content\n\n    */\n\n    DFSignals.connect('html.content', (opts) => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            elt.innerHTML = opts.content;\n        });\n    });\n    /*\"\"\"\n    .. function:: html.content(opts)\n\n        set the HTML contents of every matched element.\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.content', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        :param string selector: jQuery selector\n        :param string content: new HTML content\n    */\n\n\n    DFSignals.connect('html.text', (opts) => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            elt.textContent = opts.content;\n        });\n    });\n    /*\"\"\"\n    .. function:: html.text(opts)\n\n        Set the text contents of the matched elements.\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.text', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n\n        :param string selector: jQuery selector\n        :param string content: new HTML content\n\n    */\n\n    DFSignals.connect('html.download_file', (opts) => {\n        /*\"\"\"\n        .. function:: html.download_file(opts)\n\n            Force the client to download the given file.\n\n            .. code-block:: javascript\n\n                DFSignals.call('html.download_file', {url: \"http://example.org/test.zip\", filename: \"test.zip\"});\n\n\n            :param string url: URL of the file\n            :param string filename: name of the file\n\n        */\n        const save = document.createElement('a');\n        save.href = opts.url;\n        save.target = '_blank';\n        save.download = opts.filename || 'unknown';\n        const evt = new MouseEvent('click', {view: window, bubbles: true, cancelable: false});\n        save.dispatchEvent(evt);\n        (window.URL || window.webkitURL).revokeObjectURL(save.href);\n    });\n\n\n    DFSignals.connect('html.focus', (opts) => {\n        document.querySelectorAll(opts.selector).forEach(elt => {\n            elt.focus();\n        });\n    });\n    /*\"\"\"\n    .. function:: html.focus(opts)\n\n        Set the focus to the matched element.\n\n        .. code-block:: javascript\n\n            DFSignals.call('html.focus', {selector: \"#obj\"});\n\n        :param string selector: jQuery selector\n\n    */\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", connectSignals);\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nexport function serializeForm(form) {\n    const serialized = [];\n    // Loop through each field in the form\n    for (let i = 0; i < form.elements.length; i++) {\n        const field = form.elements[i];\n        // Respect the same rules as jQuery's serializeArray\n        if (!field.name || field.disabled || field.type === 'reset' || field.type === 'submit' || field.type === 'button') {\n            continue;\n        }\n        if (field.type === \"file\") {  // just returns the name of selected files\n            for (let n = 0; n < field.files.length; n++) {\n                serialized.push({name: field.name, value: field.files[n].name});\n            }\n        } else if (field.type === 'select-multiple') { // get all selected options\n            for (let n = 0; n < field.selectedOptions.length; n++) {\n                serialized.push({name: field.name, value: field.selectedOptions[n].value});\n            }\n        } else if ((field.type !== 'checkbox' && field.type !== 'radio') || field.checked) {\n            serialized.push({name: field.name, value: field.value});\n        }\n    }\n    return serialized;\n}\n\n\nfunction DOMContentAdded(evt) {\n    /*\n    looks for an attribute \"data-df-signal\" that contains a JSON-list of objects:\n    {\n        name: \"name of the signal to call\",  (required)\n        on: \"name of the listened event\",    (optional: defaults to \"submit\" for forms, \"\" )\n        opts: \"extra options\",               (optional)\n        form: \"name of option to add to opts that contains the serialized form\",  (optional)\n        value: \"name of option to add to opts that contains the value\",  (optional)\n        prevent: preventDefault               (optional, defaults to true for on==\"change\" else false )\n    }\n     */\n    evt.target.querySelectorAll(\"[data-df-signal]\").forEach(\n        target => {\n            const signals = JSON.parse(target.getAttribute(\"data-df-signal\"));\n            signals.forEach(signal => {\n                let eventName = signal.on;\n                if (!eventName) {\n                    if (target.tagName === \"FORM\") {\n                        eventName = \"submit\";\n                    } else if ((target.tagName === \"INPUT\" && !(target.type === 'reset' || target.type === 'submit' || target.type === 'button')) || (target.tagName === \"TEXTAREA\")) {\n                        eventName = \"change\";\n                    } else {\n                        eventName = \"click\";\n                    }\n                }\n                const callback = evt => {\n                    // noinspection JSUnresolvedVariable\n                    const prevent = signal.prevent;\n                    const opts = signal.opts || {};\n                    if (signal.form) {\n                        opts[signal.form] = serializeForm(target);\n                    }\n                    if (signal.value) {\n\n                        if (target.type === \"file\") {  // just returns the name of selected files\n                            opts[signal.value] = [];\n                            for (let n = 0; n < target.files.length; n++) {\n                                opts[signal.value].push(target.files[n].name);\n                            }\n                        } else if (target.type === 'select-multiple') { // get all selected options\n                            opts[signal.value] = [];\n                            for (let n = 0; n < target.selectedOptions.length; n++) {\n                                opts[signal.value].push(target.selectedOptions[n].value);\n                            }\n                        } else if (target.type === 'checkbox' || target.type === 'radio') {\n                            opts[signal.value] = target.checked;\n\n                        } else {\n                            opts[signal.value] = target.value;\n                        }\n                    }\n                    DFSignals.call(\n                        signal.name,\n                        opts\n                    );\n\n                    if (prevent === true || (prevent === null && eventName !== \"change\")) {\n                        evt.preventDefault();\n                    }\n                }\n                target.addEventListener(eventName, callback);\n            });\n        }\n    );\n}\n\n\ndocument.addEventListener(\"DOMContentAdded\", (evt) => {\n    window.setTimeout(() => {\n        DOMContentAdded(evt);\n    }, 200);\n    // awful trick for being sure that our addEventListener is the last.\n    // allows CKEditor to push its content to the textarea before sending the content of the form.\n});"],"sourceRoot":""}